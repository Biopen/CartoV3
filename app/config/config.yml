imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@BiopenGeoDirectoryBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr
    mongodb_server: "mongodb://localhost:27017"

fos_js_routing:
    routes_to_expose: [ (.*) ]

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ['127.0.0.1']
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    paths:
        "%kernel.root_dir%/../src/Biopen/GeoDirectoryBundle/Resources/views": directory
        "%kernel.root_dir%/../src/Biopen/CoreBundle/Resources/views": BiopenCoreBundle
        "%kernel.root_dir%/../src/Application/Sonata/UserBundle/Resources/views": UserBundle
    form_themes:
        - 'SonataFormatterBundle:Form:formatter.html.twig'
    form:
        resources:
            - 'SonataCoreBundle:Form:colorpicker.html.twig'
            - 'XmonColorPickerTypeBundle:Form:fields.html.twig'
            - 'SonataFormatterBundle:Form:formatter.html.twig'
            
# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        mapping_types:
            point: string
        types:
            point:
                class:  Wantlet\ORM\PointType
            json: Sonata\Doctrine\Types\JsonType        
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        dql: 
            numeric_functions: 
                DISTANCE: Wantlet\ORM\Distance 
                POINT_STR: Wantlet\ORM\PointStr
        mappings:
            ApplicationSonataUserBundle: ~
            SonataUserBundle: ~
            FOSUserBundle: ~ 
        
# Mongodb Configuration
doctrine_mongodb:
    connections:
        default:
            server: "%mongodb_server%"
            options: {}
    default_database: cartoV3
    document_managers:
        default:
            auto_mapping: true
            mappings:                   
                gedmo_translatable:
                    type: annotation
                    prefix: Gedmo\Translatable\Document
                    dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Document"
                    alias: GedmoTranslatable # (optional) it will default to the name set for the mapping
                    is_bundle: false
                gedmo_translator:
                    type: annotation
                    prefix: Gedmo\Translator\Document
                    dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translator/Document"
                    alias: GedmoTranslator # (optional) it will default to the name set for the mapping
                    is_bundle: false
                # gedmo_loggable:
                #     type: annotation
                #     prefix: Gedmo\Loggable\Document
                #     dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Document"
                #     alias: GedmoLoggable # (optional) it will default to the name set for the mappingmapping
                #     is_bundle: false
                # gedmo_tree:
                #     type: annotation
                #     prefix: Gedmo\Tree\Document
                #     dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Document"
                #     alias: GedmoTree # (optional) it will default to the name set for the mapping
                #     is_bundle: false

stof_doctrine_extensions:
    default_locale: fr
    mongodb:
        default:
            sortable: true

pix_sortable_behavior:
    db_driver: mongodb # default value : orm
    position_field:
        default: position #default value : position
        entities:
            Biopen/CoreBundle/Document/About: position

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    filters:
        cssrewrite: ~
        #     formatter: 'Leafo\ScssPhp\Formatter\Compressed'
        # sass:    ~
        # compass: ~
        # uglifycss:
        #     bin: C:/users/MARIETTE/AppData/Roaming/npm/uglifycss

bazinga_geocoder: 
    providers:
        google_maps:
            locale:               fr
            region:               null
            use_ssl:              true
            api_key:              AIzaSyBgah9u8A21CdN6O_fN80Op-4zcLJ0EwXk
        openstreetmap:
            locale:               fr

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)
        sonata.block.service.text: # used to if you plan to use Sonata user routes
        # enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts: [admin]

sonata_doctrine_mongo_db_admin:
    templates:
        form:
            - SonataDoctrineMongoDBAdminBundle:Form:form_admin_fields.html.twig
        filter:
            - SonataDoctrineMongoDBAdminBundle:Form:filter_admin_fields.html.twig
        types:
            list:
                array:      SonataAdminBundle:CRUD:list_array.html.twig
                boolean:    SonataAdminBundle:CRUD:list_boolean.html.twig
                date:       SonataAdminBundle:CRUD:list_date.html.twig
                time:       SonataAdminBundle:CRUD:list_time.html.twig
                datetime:   SonataAdminBundle:CRUD:list_datetime.html.twig
                text:       SonataAdminBundle:CRUD:base_list_field.html.twig
                trans:      SonataAdminBundle:CRUD:list_trans.html.twig
                string:     SonataAdminBundle:CRUD:base_list_field.html.twig
                smallint:   SonataAdminBundle:CRUD:base_list_field.html.twig
                bigint:     SonataAdminBundle:CRUD:base_list_field.html.twig
                integer:    SonataAdminBundle:CRUD:base_list_field.html.twig
                decimal:    SonataAdminBundle:CRUD:base_list_field.html.twig
                identifier: SonataAdminBundle:CRUD:base_list_field.html.twig

            show:
                array:      SonataAdminBundle:CRUD:show_array.html.twig
                boolean:    SonataAdminBundle:CRUD:show_boolean.html.twig
                date:       SonataAdminBundle:CRUD:show_date.html.twig
                time:       SonataAdminBundle:CRUD:show_time.html.twig
                datetime:   SonataAdminBundle:CRUD:show_datetime.html.twig
                text:       SonataAdminBundle:CRUD:base_show_field.html.twig
                trans:      SonataAdminBundle:CRUD:show_trans.html.twig
                string:     SonataAdminBundle:CRUD:base_show_field.html.twig
                smallint:   SonataAdminBundle:CRUD:base_show_field.html.twig
                bigint:     SonataAdminBundle:CRUD:base_show_field.html.twig
                integer:    SonataAdminBundle:CRUD:base_show_field.html.twig
                decimal:    SonataAdminBundle:CRUD:base_show_field.html.twig

sonata_formatter:
    formatters:
        markdown:
            service: sonata.formatter.text.markdown
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig #keep this commented unless you are using media bundle.


        text:
            service: sonata.formatter.text.text
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        rawhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        richhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        twig:
            service: sonata.formatter.text.twigengine
            extensions: [] # Twig formatter cannot have extensions

sonata_admin:
    title:                'Cartopen Administration'
    title_logo:           'assets/img/favicon.png'
    security:
        handler: sonata.admin.security.handler.role
    templates:
        # default global templates
        layout:  SonataAdminBundle::layout.html.twig

sonata_user:
    security_acl: true
    impersonating:
        route: sonata_admin_dashboard
    manager_type: orm # can be orm or mongodb
    class:                  # Entity Classes
        user:               Application\Sonata\UserBundle\Entity\User
        group:              Application\Sonata\UserBundle\Entity\Group

    admin:                  # Admin Classes
        user:
            class:          Sonata\UserBundle\Admin\Entity\UserAdmin
            controller:     SonataAdminBundle:CRUD
            translation:    SonataUserBundle

        group:
            class:          Sonata\UserBundle\Admin\Entity\GroupAdmin
            controller:     SonataAdminBundle:CRUD
            translation:    SonataUserBundle        

fos_user:
    db_driver:      orm # can be orm or odm
    firewall_name:  main
    user_class:     Application\Sonata\UserBundle\Entity\User
    registration:
        form:
            type: biopen_user_registration

    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager                    # If you're using doctrine orm (use sonata.user.mongodb.group_manager for mongodb)

    service:
        user_manager: sonata.user.orm.user_manager                      # If you're using doctrine orm (use sonata.user.mongodb.user_manager for mongodb)

hwi_oauth:
    # list of names of the firewalls in which this bundle is active, this setting MUST be set
    firewall_names: [main]
    target_path_parameter: _destination
    use_referer: true
    fosub:
        username_iterations: 30
        properties:
            google: gplusUid
            facebook : facebook_id
    resource_owners:
        gplus:
            type:                google
            client_id:           718756240856-nqjk8stfevmbjoklqctvec8avtci3oac.apps.googleusercontent.com
            client_secret:       c2j_wuyI7lo3kECCkB9nbmcr
            scope:               "email profile"
            options:
                display: popup #dialog is optimized for popup window
                csrf: true
        facebook:
            type:                facebook
            client_id:           723073984538238
            client_secret:       44cbf0bb6892e8d8bfd890357e9b6951
            options:
                display: popup #dialog is optimized for popup window
                auth_type: rerequest # Re-asking for Declined Permissions
        yahoo:
            type:                yahoo
            client_id:           dj0yJmk9VlJSaEY2MTZIODVCJmQ9WVdrOWJGRlhUMjVJTlRnbWNHbzlNQS0tJnM9Y29uc3VtZXJzZWNyZXQmeD03Nw--
            client_secret:       babaa2b0eb6dc3d580f08f8ad298115409abae0c
            options:
                display: popup #dialog is optimized for popup window
