{% extends "@BiopenCoreBundle/page-layout.html.twig" %}

{% set pageName = 'directory' %}

{% block title %}{% endblock %}

{# Stylessheets #}
{% block page_stylesheets %}
  
{% endblock %}

{# BODY CONTENT #}
{% block body_content %}

  <div id="directory-container"></div>

{% endblock %}

{% block javascripts %}  

  <script>

    {% import _self as this %}

    $(document).ready(function()
    {
        carto = goGoCarto('#directory-container', {
            data:
            {
                taxonomy: {{ mainCategoryJson | raw }},
                openHours: {{ openHoursCategoryJson | raw }},
                elementApiUrl: "{{ path('biopen_api_element_by_id') }}",
                elementInBoundsApiUrl: "{{ path('biopen_api_elements_in_bounds') }}",
            },
            features:
            {
                search:   { url: "{{ path('biopen_api_elements_from_text') }}" },
                share:    {{ this.getConfigFrom(config.shareFeature,  path('biopen_report_error_for_element')) }},
                report:   {{ this.getConfigFrom(config.reportFeature, path('biopen_report_error_for_element')) }},
                favorite: {{ this.getConfigFrom(config.favoriteFeature) }},
                export:   {{ this.getConfigFrom(config.exportIframeFeature) }},
                pending:  {{ this.getConfigFrom(config.pendingFeature) }},

                add:      {{ this.getConfigFrom(config.addFeature, path('biopen_element_add')) }},
                add:      { active: false }, // force desactivate the feature in GoGoCartoJs cause we treat it directly in the header
                edit:     {{ this.getConfigFrom(config.editFeature, path('biopen_element_edit', {'id':'fake'}) | replace({'fake':''})) }},
                delete:   {{ this.getConfigFrom(config.deleteFeature, path('biopen_delete_element')) }},

                vote:     {{ this.getConfigFrom(config.collaborativeModerationFeature) }},     
            },
            security:
            {
                userRole: '{{ userGogocartoRole }}',
                loginAction: function() { $("#popup-login").openModal(); }
            },  
        }); 
    });   

  </script>  

{% endblock %}

{% macro getConfigFrom(feature, path) %}
    { 
        active: {{ feature.active ? 'true' : 'false' }}, 
        inIframe: {{ feature.activeInIframe ? 'true' : 'false' }},
        url: "{{ path | default('') }}", 
        roles: {{ feature.getAllowedRoles | json_encode | raw }}
    }
{% endmacro %}



