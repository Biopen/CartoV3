<?php

namespace Biopen\FournisseurBundle\Repository;

use Doctrine\ORM\EntityRepository;
/**
 * ProviderRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProviderRepository extends EntityRepository
{
	public function findFromPoint($distance, $point)
	{	 
   $qb = $this->createQueryBuilder('provider');

    $qb = $this->_em->createQueryBuilder()
      ->select('provider as Provider, DISTANCE(provider.latlng, POINT_STR(:point))*100 AS distance')
      ->setParameter('point',$point)
      ->from($this->_entityName, 'provider')
      ->where('provider.valide = 0')
      ->andwhere('DISTANCE(provider.latlng, POINT_STR(:point))*100 < :distance')
      ->setParameter('distance', $distance)
      ->orderBy('distance')  
      ->leftjoin('provider.products', 'providerProduct')
      ->addSelect('providerProduct')
      ->leftjoin('providerProduct.product', 'product')
      ->addSelect('product');
    ;

    // Puis on ne retourne que $limit résultats
    //$qb->setMaxResults(10);

    // Enfin, on retourne le résultat
    return $qb
      ->getQuery()
      ->getResult()
      ;
  	}

  public function findAllProviders()
  {  
   $qb = $this->createQueryBuilder('provider');

    $qb = $this->_em->createQueryBuilder()
      ->select('provider as Provider')
      ->from($this->_entityName, 'provider')
      ->where('provider.valide = 0')
      ->leftjoin('provider.products', 'providerProduct')
      ->addSelect('providerProduct')
      ->leftjoin('providerProduct.product', 'product')
      ->addSelect('product');
    ;

    // Puis on ne retourne que $limit résultats
    //$qb->setMaxResults(10);

    // Enfin, on retourne le résultat
    return $qb
      ->getQuery()
      ->getResult()
      ;
    }
}
